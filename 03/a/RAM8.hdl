// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=ra, b=rb, c=rc, d=rd, e=re, f=rf, g=rg, h=rh);

    Register(in=in, load=ra, out=rao); // register a output
    Register(in=in, load=rb, out=rbo); // register b output
    Register(in=in, load=rc, out=rco); // register c output
    Register(in=in, load=rd, out=rdo); // register d output
    Register(in=in, load=re, out=reo); // register e output
    Register(in=in, load=rf, out=rfo); // register f output
    Register(in=in, load=rg, out=rgo); // register g output
    Register(in=in, load=rh, out=rho); // register h output

    Mux8Way16(a=rao, b=rbo, c=rco, d=rdo, e=reo, f=rfo, g=rgo, h=rho, sel=address, out=out);
}